210224 Vanilla JS - 크롬 앱 만들기 start

# JavaScript : 웹에 쓰이는 하나뿐인 언어
# Vanilla JS : 아무것도(library, framework) 없는 js, 브라우저를 통해 제공 


210302 Ch1-6 : Variable 변수

$console.log() : 실행
*변수를 생성해보자
Create -> Initialize -> Use
let a = 17; -> let b = a - 5; -> console.log(b);

210304 Ch1-7 : let, const, var

const : 상수, stable, 변하지 않음, 재선언 금지, 재할당 금지
let : 값 변경 허용, 재선언 금지, 재할당 가능
var : variable 값 변경 허용, 재선언 가능, 재할당 가능

* 변수 첫 사용은 const로 하자
* "..." 는 text 취급, string
* bool -> true/false : text 아님
* float : 소숫점

## Organizing Data by Array & Object

# Array : 여러 데이터를 하나로 묶어서 저장 list 

* 이름 지정할 때 소문자대문자 섞어 씀 'camel case'
ex) const daysOfWeek = ["Mon", "Wed"];
-> console.log(daysOfWeek[1]);


# Object : 각 value에 이름 지정 가능
: 실제 객체를 만들어서 label을 저장하고 싶은 data에 줄 수 있다
const meiInfo = {
	name : "Mei",
	age : 24,
	gender : "Female",
	isHandsome : true
}
-> console.log(meiInfo.gender); 

* Object를 Array 안에 넣기 가능!
favAnimals : ["Cat", "Puppy"]

* Object 의 Array 생성 가능!
favFood : [{name : "Bob", fatty : false }]

** log는 object이자 function

* 인자 (Argument)/파라미터
: 함수는 인자를 받음. 유사 변수
-> 인자를 받도록 함수를 준비하자
-> function sayHello(potato) { 
	console.log('Hello', potato);
}
-> 인자를 무한히 받을 수 있다


210307 Ch2-1 : More Function Fun

더 멋지게 사용해보자
`` : 백틱
console.log(`Hello ${name} you are ${age} years old`);
-> 변수를 ${ }로 설정

console.log 대신에 return 으로 반환가능



210308 Ch2-2 : JS DOM Functions


JS를 HTML과 같이 써보자
*JS에서 id 선택하기 -> document.

*DOM : Document Object Module
: JS는 HTML에 있는 모든 요소들을 가져오고 object로 바꿔줌
** innerHTML


210312 Ch2-3 : Modifying the DOM with JS

console.log 대신에 다른 걸 써보자
console.dir -> js 객체 표기법이 나옴

수정해보자
title.style.color = 'red'; -> html 을 js로 조작 가능

document.title = "I own you"; -> 문서 이름 수정 가능

const title = document.querySelector("title");
# querySelector : 노드의 첫번째 자식을 반환return
-> #title : id를 선택하겠다
-> /title : class를 선택하겠다









